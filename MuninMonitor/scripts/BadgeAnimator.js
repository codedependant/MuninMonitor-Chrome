// Generated by CoffeeScript 1.3.3
(function() {
  var BadgeAnimator,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  this.BadgeAnimator = BadgeAnimator = (function() {

    function BadgeAnimator() {
      this.animateFlip = __bind(this.animateFlip, this);
      this.rotation = 0;
      this.canvas = $('canvas')[0];
      this.canvasContext = canvas.getContext('2d');
      this.loggedInImage = $('#icon')[0];
    }

    BadgeAnimator.prototype.drawIconAtRotation = function() {
      this.canvasContext.save();
      this.canvasContext.clearRect(0, 0, this.canvas.width, this.canvas.height);
      this.canvasContext.translate(Math.ceil(this.canvas.width / 2), Math.ceil(this.canvas.height / 2));
      this.canvasContext.rotate(2 * Math.PI * this.ease(this.rotation));
      this.canvasContext.drawImage(this.loggedInImage, -Math.ceil(this.canvas.width / 2), -Math.ceil(this.canvas.height / 2));
      this.canvasContext.restore();
      return chrome.browserAction.setIcon({
        imageData: this.canvasContext.getImageData(0, 0, this.canvas.width, this.canvas.height)
      });
    };

    BadgeAnimator.prototype.animateFlip = function() {
      this.rotation += 1 / 30;
      this.drawIconAtRotation(this.rotation);
      if (this.rotation <= 1) {
        return setTimeout(this.animateFlip, 10);
      } else {
        this.rotation = 0;
        return this.drawIconAtRotation();
      }
    };

    BadgeAnimator.prototype.ease = function(x) {
      return (1 - Math.sin(Math.PI / 2 + x * Math.PI)) / 2;
    };

    return BadgeAnimator;

  })();

}).call(this);
