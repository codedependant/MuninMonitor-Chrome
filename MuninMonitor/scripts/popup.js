// Generated by CoffeeScript 1.3.3
(function() {

  requirejs.config({
    shim: {
      '../../libs/underscore': {
        exports: "_"
      },
      '../../libs/backbone': {
        deps: ['../../libs/underscore', 'jquery'],
        exports: 'Backbone'
      },
      '../../libs/Mustache': {
        exports: "Mustache"
      },
      'models/Device': {
        deps: ['../../libs/underscore', '../../libs/backbone', 'jquery'],
        exports: 'Device'
      },
      'models/DeviceCollection': {
        deps: ['../../libs/underscore', '../../libs/backbone', 'jquery', 'models/Device'],
        exports: 'DeviceCollection'
      }
    }
  });

  define(['jquery', '../../libs/underscore', '../../libs/backbone', '../../libs/Mustache', '../../libs/text!../templates/popup.html', 'models/Device', 'models/DeviceCollection'], function($, _, Backbone, Mustache, popup_template, Device, DeviceCollection) {
    var PopupView, popup,
      _this = this;
    PopupView = Backbone.View.extend({
      el: "body",
      events: {
        'click li': 'openTab'
      },
      initialize: function(collection) {
        this.collection = new DeviceCollection(collection);
        return this.render();
      },
      render: function() {
        var html;
        html = Mustache.to_html(popup_template, {
          devices: this.collection.toJSON(),
          url: localStorage["munin_monitor_url"]
        });
        return this.$el.html(html);
      },
      openTab: function(event) {
        var url;
        url = $(event.currentTarget).data("url");
        return chrome.tabs.create({
          url: url
        });
      }
    });
    return popup = new PopupView(JSON.parse(localStorage['munin.monitor.devices']));
  });

}).call(this);
